// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // For credential login
  
  // NexusAI specific fields
  credits       Int       @default(0)
  plan          String    @default("Free")
  role          UserRole  @default(USER)
  isActive      Boolean   @default(true)
  
  apiKeys       ApiKey[]
  usage         Usage[]
  transactions  Transaction[]
  
  accounts Account[]
  sessions Session[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

model ApiKey {
  id        String   @id @default(cuid())
  name      String
  key       String   @unique
  userId    String
  isActive  Boolean  @default(true)
  lastUsed  DateTime?
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Usage {
  id        String   @id @default(cuid())
  userId    String
  type      String   // "api_call", "voice_minutes", "sms_sent"
  amount    Int
  cost      Float
  metadata  Json?    // Additional data about the usage
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
}

model Transaction {
  id                      String   @id @default(cuid())
  userId                  String
  type                    String   // "CREDIT_PURCHASE", "SUBSCRIPTION", "REFUND"
  amount                  Float    // Amount in currency
  currency                String   @default("USD")
  credits                 Int?     // Credits purchased (for credit purchases)
  status                  String   // "PENDING", "PROCESSING", "COMPLETED", "FAILED", "CANCELLED"
  paymentMethod           String   // "MTN_MOMO", "AIRTEL_MONEY", "CARD"
  phoneNumber             String?  // For mobile money
  externalTransactionId   String?  // MTN/other provider transaction ID
  description             String?
  errorMessage            String?
  metadata                Json?    // Additional transaction data
  completedAt             DateTime?
  
  user                    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
